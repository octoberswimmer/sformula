// Code generated from ./FormulaLexer.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type FormulaLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var FormulaLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func formulalexerLexerInit() {
	staticData := &FormulaLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "WHITESPACE_CHANNEL", "COMMENT_CHANNEL",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "", "", "", "", "", "", "", "", "'('", "')'", "'.'", "','", "'^'",
		"'&'", "'+'", "'-'", "'*'", "'/'", "'<'", "'>'", "'='", "'<>'", "'!='",
		"'=='", "'&&'", "'||'",
	}
	staticData.SymbolicNames = []string{
		"", "StringLiteral", "IntegerLiteral", "FloatingPointLiteral", "BooleanLiteral",
		"NullLiteral", "Identifier", "WS", "COMMENT", "LPAREN", "RPAREN", "DOT",
		"COMMA", "CARET", "BITAND", "ADD", "SUB", "MUL", "DIV", "LT", "GT",
		"ASSIGN", "LESSANDGREATER", "NOTEQUAL", "EQUAL", "AND", "OR",
	}
	staticData.RuleNames = []string{
		"StringLiteral", "DQSTRING", "DQESC", "SQSTRING", "SQESC", "IntegerLiteral",
		"Digits", "Digit", "NonZeroDigit", "FloatingPointLiteral", "BooleanLiteral",
		"NullLiteral", "Identifier", "Letter", "LetterOrDigit", "WS", "COMMENT",
		"LPAREN", "RPAREN", "DOT", "COMMA", "CARET", "BITAND", "ADD", "SUB",
		"MUL", "DIV", "LT", "GT", "ASSIGN", "LESSANDGREATER", "NOTEQUAL", "EQUAL",
		"AND", "OR", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K",
		"L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y",
		"Z",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 26, 320, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 1, 0, 1, 0, 3, 0, 126,
		8, 0, 1, 1, 1, 1, 1, 1, 5, 1, 131, 8, 1, 10, 1, 12, 1, 134, 9, 1, 1, 1,
		1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 3, 2, 142, 8, 2, 1, 3, 1, 3, 1, 3, 5, 3,
		147, 8, 3, 10, 3, 12, 3, 150, 9, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4,
		3, 4, 158, 8, 4, 1, 5, 1, 5, 1, 6, 4, 6, 163, 8, 6, 11, 6, 12, 6, 164,
		1, 7, 1, 7, 3, 7, 169, 8, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 3, 9, 176, 8,
		9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 10, 3, 10, 189, 8, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1,
		12, 5, 12, 198, 8, 12, 10, 12, 12, 12, 201, 9, 12, 1, 13, 1, 13, 1, 14,
		1, 14, 1, 15, 4, 15, 208, 8, 15, 11, 15, 12, 15, 209, 1, 15, 1, 15, 1,
		16, 1, 16, 1, 16, 1, 16, 5, 16, 218, 8, 16, 10, 16, 12, 16, 221, 9, 16,
		1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1,
		19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 1, 24,
		1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1,
		30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33,
		1, 33, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1,
		38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43,
		1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1,
		48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1, 53,
		1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 57, 1, 57, 1, 58, 1, 58, 1,
		59, 1, 59, 1, 60, 1, 60, 3, 132, 148, 219, 0, 61, 1, 1, 3, 0, 5, 0, 7,
		0, 9, 0, 11, 2, 13, 0, 15, 0, 17, 0, 19, 3, 21, 4, 23, 5, 25, 6, 27, 0,
		29, 0, 31, 7, 33, 8, 35, 9, 37, 10, 39, 11, 41, 12, 43, 13, 45, 14, 47,
		15, 49, 16, 51, 17, 53, 18, 55, 19, 57, 20, 59, 21, 61, 22, 63, 23, 65,
		24, 67, 25, 69, 26, 71, 0, 73, 0, 75, 0, 77, 0, 79, 0, 81, 0, 83, 0, 85,
		0, 87, 0, 89, 0, 91, 0, 93, 0, 95, 0, 97, 0, 99, 0, 101, 0, 103, 0, 105,
		0, 107, 0, 109, 0, 111, 0, 113, 0, 115, 0, 117, 0, 119, 0, 121, 0, 1, 0,
		30, 1, 0, 49, 57, 4, 0, 36, 36, 65, 90, 95, 95, 97, 122, 5, 0, 36, 36,
		48, 57, 65, 90, 95, 95, 97, 122, 3, 0, 9, 10, 12, 13, 32, 32, 2, 0, 65,
		65, 97, 97, 2, 0, 66, 66, 98, 98, 2, 0, 67, 67, 99, 99, 2, 0, 68, 68, 100,
		100, 2, 0, 69, 69, 101, 101, 2, 0, 70, 70, 102, 102, 2, 0, 71, 71, 103,
		103, 2, 0, 72, 72, 104, 104, 2, 0, 73, 73, 105, 105, 2, 0, 74, 74, 106,
		106, 2, 0, 75, 75, 107, 107, 2, 0, 76, 76, 108, 108, 2, 0, 77, 77, 109,
		109, 2, 0, 78, 78, 110, 110, 2, 0, 79, 79, 111, 111, 2, 0, 80, 80, 112,
		112, 2, 0, 81, 81, 113, 113, 2, 0, 82, 82, 114, 114, 2, 0, 83, 83, 115,
		115, 2, 0, 84, 84, 116, 116, 2, 0, 85, 85, 117, 117, 2, 0, 86, 86, 118,
		118, 2, 0, 87, 87, 119, 119, 2, 0, 88, 88, 120, 120, 2, 0, 89, 89, 121,
		121, 2, 0, 90, 90, 122, 122, 298, 0, 1, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0,
		0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0,
		0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0,
		0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1,
		0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53,
		1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0,
		61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0,
		0, 69, 1, 0, 0, 0, 1, 125, 1, 0, 0, 0, 3, 127, 1, 0, 0, 0, 5, 141, 1, 0,
		0, 0, 7, 143, 1, 0, 0, 0, 9, 157, 1, 0, 0, 0, 11, 159, 1, 0, 0, 0, 13,
		162, 1, 0, 0, 0, 15, 168, 1, 0, 0, 0, 17, 170, 1, 0, 0, 0, 19, 172, 1,
		0, 0, 0, 21, 188, 1, 0, 0, 0, 23, 190, 1, 0, 0, 0, 25, 195, 1, 0, 0, 0,
		27, 202, 1, 0, 0, 0, 29, 204, 1, 0, 0, 0, 31, 207, 1, 0, 0, 0, 33, 213,
		1, 0, 0, 0, 35, 227, 1, 0, 0, 0, 37, 229, 1, 0, 0, 0, 39, 231, 1, 0, 0,
		0, 41, 233, 1, 0, 0, 0, 43, 235, 1, 0, 0, 0, 45, 237, 1, 0, 0, 0, 47, 239,
		1, 0, 0, 0, 49, 241, 1, 0, 0, 0, 51, 243, 1, 0, 0, 0, 53, 245, 1, 0, 0,
		0, 55, 247, 1, 0, 0, 0, 57, 249, 1, 0, 0, 0, 59, 251, 1, 0, 0, 0, 61, 253,
		1, 0, 0, 0, 63, 256, 1, 0, 0, 0, 65, 259, 1, 0, 0, 0, 67, 262, 1, 0, 0,
		0, 69, 265, 1, 0, 0, 0, 71, 268, 1, 0, 0, 0, 73, 270, 1, 0, 0, 0, 75, 272,
		1, 0, 0, 0, 77, 274, 1, 0, 0, 0, 79, 276, 1, 0, 0, 0, 81, 278, 1, 0, 0,
		0, 83, 280, 1, 0, 0, 0, 85, 282, 1, 0, 0, 0, 87, 284, 1, 0, 0, 0, 89, 286,
		1, 0, 0, 0, 91, 288, 1, 0, 0, 0, 93, 290, 1, 0, 0, 0, 95, 292, 1, 0, 0,
		0, 97, 294, 1, 0, 0, 0, 99, 296, 1, 0, 0, 0, 101, 298, 1, 0, 0, 0, 103,
		300, 1, 0, 0, 0, 105, 302, 1, 0, 0, 0, 107, 304, 1, 0, 0, 0, 109, 306,
		1, 0, 0, 0, 111, 308, 1, 0, 0, 0, 113, 310, 1, 0, 0, 0, 115, 312, 1, 0,
		0, 0, 117, 314, 1, 0, 0, 0, 119, 316, 1, 0, 0, 0, 121, 318, 1, 0, 0, 0,
		123, 126, 3, 7, 3, 0, 124, 126, 3, 3, 1, 0, 125, 123, 1, 0, 0, 0, 125,
		124, 1, 0, 0, 0, 126, 2, 1, 0, 0, 0, 127, 132, 5, 34, 0, 0, 128, 131, 3,
		5, 2, 0, 129, 131, 9, 0, 0, 0, 130, 128, 1, 0, 0, 0, 130, 129, 1, 0, 0,
		0, 131, 134, 1, 0, 0, 0, 132, 133, 1, 0, 0, 0, 132, 130, 1, 0, 0, 0, 133,
		135, 1, 0, 0, 0, 134, 132, 1, 0, 0, 0, 135, 136, 5, 34, 0, 0, 136, 4, 1,
		0, 0, 0, 137, 138, 5, 92, 0, 0, 138, 142, 5, 34, 0, 0, 139, 140, 5, 92,
		0, 0, 140, 142, 5, 92, 0, 0, 141, 137, 1, 0, 0, 0, 141, 139, 1, 0, 0, 0,
		142, 6, 1, 0, 0, 0, 143, 148, 5, 39, 0, 0, 144, 147, 3, 9, 4, 0, 145, 147,
		9, 0, 0, 0, 146, 144, 1, 0, 0, 0, 146, 145, 1, 0, 0, 0, 147, 150, 1, 0,
		0, 0, 148, 149, 1, 0, 0, 0, 148, 146, 1, 0, 0, 0, 149, 151, 1, 0, 0, 0,
		150, 148, 1, 0, 0, 0, 151, 152, 5, 39, 0, 0, 152, 8, 1, 0, 0, 0, 153, 154,
		5, 92, 0, 0, 154, 158, 5, 39, 0, 0, 155, 156, 5, 92, 0, 0, 156, 158, 5,
		92, 0, 0, 157, 153, 1, 0, 0, 0, 157, 155, 1, 0, 0, 0, 158, 10, 1, 0, 0,
		0, 159, 160, 3, 13, 6, 0, 160, 12, 1, 0, 0, 0, 161, 163, 3, 15, 7, 0, 162,
		161, 1, 0, 0, 0, 163, 164, 1, 0, 0, 0, 164, 162, 1, 0, 0, 0, 164, 165,
		1, 0, 0, 0, 165, 14, 1, 0, 0, 0, 166, 169, 5, 48, 0, 0, 167, 169, 3, 17,
		8, 0, 168, 166, 1, 0, 0, 0, 168, 167, 1, 0, 0, 0, 169, 16, 1, 0, 0, 0,
		170, 171, 7, 0, 0, 0, 171, 18, 1, 0, 0, 0, 172, 173, 3, 13, 6, 0, 173,
		175, 5, 46, 0, 0, 174, 176, 3, 13, 6, 0, 175, 174, 1, 0, 0, 0, 175, 176,
		1, 0, 0, 0, 176, 20, 1, 0, 0, 0, 177, 178, 3, 109, 54, 0, 178, 179, 3,
		105, 52, 0, 179, 180, 3, 111, 55, 0, 180, 181, 3, 79, 39, 0, 181, 189,
		1, 0, 0, 0, 182, 183, 3, 81, 40, 0, 183, 184, 3, 71, 35, 0, 184, 185, 3,
		93, 46, 0, 185, 186, 3, 107, 53, 0, 186, 187, 3, 79, 39, 0, 187, 189, 1,
		0, 0, 0, 188, 177, 1, 0, 0, 0, 188, 182, 1, 0, 0, 0, 189, 22, 1, 0, 0,
		0, 190, 191, 3, 97, 48, 0, 191, 192, 3, 111, 55, 0, 192, 193, 3, 93, 46,
		0, 193, 194, 3, 93, 46, 0, 194, 24, 1, 0, 0, 0, 195, 199, 3, 27, 13, 0,
		196, 198, 3, 29, 14, 0, 197, 196, 1, 0, 0, 0, 198, 201, 1, 0, 0, 0, 199,
		197, 1, 0, 0, 0, 199, 200, 1, 0, 0, 0, 200, 26, 1, 0, 0, 0, 201, 199, 1,
		0, 0, 0, 202, 203, 7, 1, 0, 0, 203, 28, 1, 0, 0, 0, 204, 205, 7, 2, 0,
		0, 205, 30, 1, 0, 0, 0, 206, 208, 7, 3, 0, 0, 207, 206, 1, 0, 0, 0, 208,
		209, 1, 0, 0, 0, 209, 207, 1, 0, 0, 0, 209, 210, 1, 0, 0, 0, 210, 211,
		1, 0, 0, 0, 211, 212, 6, 15, 0, 0, 212, 32, 1, 0, 0, 0, 213, 214, 5, 47,
		0, 0, 214, 215, 5, 42, 0, 0, 215, 219, 1, 0, 0, 0, 216, 218, 9, 0, 0, 0,
		217, 216, 1, 0, 0, 0, 218, 221, 1, 0, 0, 0, 219, 220, 1, 0, 0, 0, 219,
		217, 1, 0, 0, 0, 220, 222, 1, 0, 0, 0, 221, 219, 1, 0, 0, 0, 222, 223,
		5, 42, 0, 0, 223, 224, 5, 47, 0, 0, 224, 225, 1, 0, 0, 0, 225, 226, 6,
		16, 1, 0, 226, 34, 1, 0, 0, 0, 227, 228, 5, 40, 0, 0, 228, 36, 1, 0, 0,
		0, 229, 230, 5, 41, 0, 0, 230, 38, 1, 0, 0, 0, 231, 232, 5, 46, 0, 0, 232,
		40, 1, 0, 0, 0, 233, 234, 5, 44, 0, 0, 234, 42, 1, 0, 0, 0, 235, 236, 5,
		94, 0, 0, 236, 44, 1, 0, 0, 0, 237, 238, 5, 38, 0, 0, 238, 46, 1, 0, 0,
		0, 239, 240, 5, 43, 0, 0, 240, 48, 1, 0, 0, 0, 241, 242, 5, 45, 0, 0, 242,
		50, 1, 0, 0, 0, 243, 244, 5, 42, 0, 0, 244, 52, 1, 0, 0, 0, 245, 246, 5,
		47, 0, 0, 246, 54, 1, 0, 0, 0, 247, 248, 5, 60, 0, 0, 248, 56, 1, 0, 0,
		0, 249, 250, 5, 62, 0, 0, 250, 58, 1, 0, 0, 0, 251, 252, 5, 61, 0, 0, 252,
		60, 1, 0, 0, 0, 253, 254, 5, 60, 0, 0, 254, 255, 5, 62, 0, 0, 255, 62,
		1, 0, 0, 0, 256, 257, 5, 33, 0, 0, 257, 258, 5, 61, 0, 0, 258, 64, 1, 0,
		0, 0, 259, 260, 5, 61, 0, 0, 260, 261, 5, 61, 0, 0, 261, 66, 1, 0, 0, 0,
		262, 263, 5, 38, 0, 0, 263, 264, 5, 38, 0, 0, 264, 68, 1, 0, 0, 0, 265,
		266, 5, 124, 0, 0, 266, 267, 5, 124, 0, 0, 267, 70, 1, 0, 0, 0, 268, 269,
		7, 4, 0, 0, 269, 72, 1, 0, 0, 0, 270, 271, 7, 5, 0, 0, 271, 74, 1, 0, 0,
		0, 272, 273, 7, 6, 0, 0, 273, 76, 1, 0, 0, 0, 274, 275, 7, 7, 0, 0, 275,
		78, 1, 0, 0, 0, 276, 277, 7, 8, 0, 0, 277, 80, 1, 0, 0, 0, 278, 279, 7,
		9, 0, 0, 279, 82, 1, 0, 0, 0, 280, 281, 7, 10, 0, 0, 281, 84, 1, 0, 0,
		0, 282, 283, 7, 11, 0, 0, 283, 86, 1, 0, 0, 0, 284, 285, 7, 12, 0, 0, 285,
		88, 1, 0, 0, 0, 286, 287, 7, 13, 0, 0, 287, 90, 1, 0, 0, 0, 288, 289, 7,
		14, 0, 0, 289, 92, 1, 0, 0, 0, 290, 291, 7, 15, 0, 0, 291, 94, 1, 0, 0,
		0, 292, 293, 7, 16, 0, 0, 293, 96, 1, 0, 0, 0, 294, 295, 7, 17, 0, 0, 295,
		98, 1, 0, 0, 0, 296, 297, 7, 18, 0, 0, 297, 100, 1, 0, 0, 0, 298, 299,
		7, 19, 0, 0, 299, 102, 1, 0, 0, 0, 300, 301, 7, 20, 0, 0, 301, 104, 1,
		0, 0, 0, 302, 303, 7, 21, 0, 0, 303, 106, 1, 0, 0, 0, 304, 305, 7, 22,
		0, 0, 305, 108, 1, 0, 0, 0, 306, 307, 7, 23, 0, 0, 307, 110, 1, 0, 0, 0,
		308, 309, 7, 24, 0, 0, 309, 112, 1, 0, 0, 0, 310, 311, 7, 25, 0, 0, 311,
		114, 1, 0, 0, 0, 312, 313, 7, 26, 0, 0, 313, 116, 1, 0, 0, 0, 314, 315,
		7, 27, 0, 0, 315, 118, 1, 0, 0, 0, 316, 317, 7, 28, 0, 0, 317, 120, 1,
		0, 0, 0, 318, 319, 7, 29, 0, 0, 319, 122, 1, 0, 0, 0, 15, 0, 125, 130,
		132, 141, 146, 148, 157, 164, 168, 175, 188, 199, 209, 219, 2, 0, 2, 0,
		0, 3, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// FormulaLexerInit initializes any static state used to implement FormulaLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewFormulaLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func FormulaLexerInit() {
	staticData := &FormulaLexerLexerStaticData
	staticData.once.Do(formulalexerLexerInit)
}

// NewFormulaLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewFormulaLexer(input antlr.CharStream) *FormulaLexer {
	FormulaLexerInit()
	l := new(FormulaLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &FormulaLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "FormulaLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// FormulaLexer tokens.
const (
	FormulaLexerStringLiteral        = 1
	FormulaLexerIntegerLiteral       = 2
	FormulaLexerFloatingPointLiteral = 3
	FormulaLexerBooleanLiteral       = 4
	FormulaLexerNullLiteral          = 5
	FormulaLexerIdentifier           = 6
	FormulaLexerWS                   = 7
	FormulaLexerCOMMENT              = 8
	FormulaLexerLPAREN               = 9
	FormulaLexerRPAREN               = 10
	FormulaLexerDOT                  = 11
	FormulaLexerCOMMA                = 12
	FormulaLexerCARET                = 13
	FormulaLexerBITAND               = 14
	FormulaLexerADD                  = 15
	FormulaLexerSUB                  = 16
	FormulaLexerMUL                  = 17
	FormulaLexerDIV                  = 18
	FormulaLexerLT                   = 19
	FormulaLexerGT                   = 20
	FormulaLexerASSIGN               = 21
	FormulaLexerLESSANDGREATER       = 22
	FormulaLexerNOTEQUAL             = 23
	FormulaLexerEQUAL                = 24
	FormulaLexerAND                  = 25
	FormulaLexerOR                   = 26
)

// FormulaLexer escapedChannels.
const (
	FormulaLexerWHITESPACE_CHANNEL = 2
	FormulaLexerCOMMENT_CHANNEL    = 3
)
